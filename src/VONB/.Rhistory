source('~/Documents/UBC_Courses/Fish_504/Tutorials2011/BrownieSim.R')
Brownie Model Simulator.
Random number seed
set.seed(8879)
I <- 3 #Number of years of marking
J <- 4 #Number of years of recaps
m <- 0.5 #true natural mortality
ni <- rpois(I,550)
fj <- rbeta(J,4,12)
P = recapture probability
Z = total mortality
F = fishing mortality
R = recaptures
P=Z=F=R=matrix(nrow=I,ncol=J)
R[i,i:J]=rmultinom(1,ni[i],p)
print(cbind(ni,R))
End of data generation.
PARAMETER_SECTION
theta = list(log.m=log(0.5),log.fj=log(fj))# rep(0.1,length=J))
itheta = as.relistable(theta)
PROCEDURE_SECTION
brownie <- function(theta)
with(relist(theta,skeleton=itheta),{
m=exp(log.m)
fj=exp(log.fj)
compute predicted recaptures given ni
P=Z=F=Rhat=matrix(nrow=I,ncol=J)
cj = fj/(m+fj)*(1-exp(-m-fj))
nll = 0
for(i in 1:I)
tmp_m=(seq(1,length(i:J),1)-1)*m
tmp_f=c(0,cumsum(fj[i:(J-1)]))
Z[i,i:J]=tmp_m + tmp_f
p=exp(-Z[i,i:J])*cj[i:J]
Rhat[i,i:J]=ni[i]*p#rmultinom(1,ni[i],p)
nll=nll   +sum(-dpois(R[i,i:J],Rhat[i,i:J],log=TRUE))
nll=nll+sum(-dmultinom(R[i,i:J],prob=p,log=TRUE))
return(nll)
})
Solver routine to estimate parameters.
solver<-function(theta,objfun,hess=FALSE)
fit<-optim(theta,objfun,method="BFGS",hessian=hess)
if(hess==TRUE)
{
H=fit$hessian     #Matrix of 2nd derivatives
V=solve(H)        #Variance covariance matrix
std=sqrt(diag(V))  #Std of parameters
R=V/(std %o% std) #Correlations.
fit$R=R; fit$std=std
return(fit)
}
fit <- solver(unlist(itheta),brownie,TRUE)
print(exp(fit$par))
source('~/Documents/UBC_Courses/Fish_504/ASSIGNMENTS/FISHGROWTH/GrowthSim.R')
source('~/Documents/UBC_Courses/Fish_504/ASSIGNMENTS/FISHGROWTH/vonB.R')
fit$par
iF<-read.table(pipe("pbpaste"))
matplot(iF)
F<-read.table(pipe("pbpaste"))
matlines(F)
0.2
sqrt(0.2)
sqrt(1-0.2)
1-sqrt(0.2)
plot(bt)
bt=scan()
mean(bt)
mean(bt[-1])
abline(v=1)
xx <- read.table(pipe("pbpaste"))
matplot(xx[,2:4],xx[,5:7],type="l")
matplot(xx[,5:7],type="l")
ax
px
pwd
dir()
x=scan()
X=read.table(pipe("pbpaste"))
X
x
cbind(1978:2012,X)
cbind(1978:2012,1,X)
ps = read.table(pipe("pbpaste"))
ps
yr=1978:2012
yr
ii
yr[ii]
cbind(yr[ii],2,ps)
cbind(yr[ii],2,ps,0,0)
cbind(yr[ii],2,ps,V7=0,V8=0)
ct = read.table(pipe("pbpaste"))
ct
ii=scan()
cbind(yr[ii],ct)
o = read.table(pipe("pbpaste"))
o
cbind(yr[ii],gr=3,o)
cbind(yr[ii],gr=3,o,V4=0,V5=0,V6=0,V7=0,V8=0)
q()
require(Riscam)
require(Riscam)#
A<-read.rep("splitter.rep")#
#
plot(A$sbio)
names(A)
require(Riscam)#
A<-read.rep("splitter.rep")#
#
plot(A$SBio)
setwd('/Users/stevenmartell1/Documents/IPHC/IPHC-project/legacy/Hare2011')
require(Riscam)#
A<-read.rep("splitter.rep")#
#
plot(A$SBio, A$R6)
R-script for looking at the size at age data.#
# Thanks to Aaron Ranta for providing the data.#
require(ggplot2)#
require(reshape2)#
hal.data       <- read.table(file="HalLenAge1998-2011bySex.txt", header=TRUE, na.strings="NULL")#
hal.data$byear <- hal.data$year - hal.data$bbage#
# Halibut length-age data for a given year.#
write.LengthAgeData <- function(iyr=2011)#
{#
	#iyr = 2009#
	sx          <- c("F","M")#
	sa          <- c("2A","2B","2C","3A","3B","4A","4B","4C","4D")#
	df          <- subset(hal.data, year==iyr)#
	df          <- subset(df, sex!="U")#
#
	df$statarea <- match(df$RegArea,sa)#
	p           <- ggplot(df,aes(bbage,frklen,col=sex)) + geom_point(size=1) + facet_wrap(~RegArea)#
#
	dfile       <- paste("LengthAge", iyr, ".dat", sep="")#
	write(dim(df)[1], dfile)#
	data        <- cbind(area = df$statarea, age = df$bbage, fl = df$frklen,  sex = match(df$sex, sx))#
	narea		<- length(unique(df$statarea))#
	write(narea, dfile, append=TRUE)#
	nsex		<- length(unique(data[, 4]))#
	write(nsex, dfile, append=TRUE)#
	write("#area\t age\t fl\t sex", file=dfile, append=TRUE)#
	write.table(data, file=dfile, append=TRUE, quote=FALSE, row.names=FALSE, col.names=FALSE, sep="\t")	#
}#
#
write.LengtAgeKey <- function(iyr=2011)#
{#
	# Construct a table of the numbers at length (row) for a given age (col)#
	# for a given year (iyr) from the setline survey. Note that for each#
	# RegArea there will be two length-age tables (female and male),  so #
	# total of 18 tables will be produced.#
	df    <- subset(hal.data, year==iyr)#
	df    <- subset(df,  sex!="U")#
	df    <- subset(df,  frklen!=0)#
	xbin  <- seq(40, 215, by=5)#
	df$FL <- xbin[findInterval(df$frklen, xbin)]#
	abin  <- seq(4, 40)#
	df$AGE<- abin[findInterval(df$bbage, abin)]#
	dfm   <- melt(df, id=c("FL","AGE","sex","RegArea"))#
	tx = acast(dfm,FL~AGE~RegArea~sex,length, fill=0)#
	fn <- paste("../HGM/LenAgeKey", iyr, ".dat", sep="")#
	write("#Dimensions, fl age area sex", file=fn)#
	write(dim(tx), file=fn, append=TRUE)#
	write("#Length intervals", file=fn, append=TRUE)#
	write(dimnames(tx)[[1]],file=fn, append=TRUE)#
	write("#Age vector", file=fn, append=TRUE)#
	write(dimnames(tx)[[2]],file=fn, append=TRUE)#
	ia <- dimnames(tx)[[3]]#
	is <- dimnames(tx)[[4]]#
	for(i in 1:2)#
	for(j in 1:9)#
	{#
		id <- paste("# area",ia[j]," sex", is[i] )#
		write(id, file=fn, append=TRUE)#
		write.table(tx[, , j, i], file=fn, append=TRUE, col.names=FALSE, row.names=FALSE)#
		write("#", file=fn, append=TRUE)#
	}#
}#
wraper<- function()#
{#
	#plots of data#
#
df2b     <- subset(hal.data,RegArea=="2B",select=c(year,byear,frklen,bbage,srfage,sex))#
df2b     <- subset(df2b, bbage>=6)#
df2b     <- subset(df2b, bbage<=24)#
p <- ggplot(df2b) + geom_point(aes(x=bbage,y=frklen, col=sex), size=1) #
p <- p + geom_point(aes(x=srfage, y=frklen, col=sex), size=1, pch=3)#
p <- p + facet_wrap(~year)#
p#
#
p<-ggplot(df2b,aes(x=bbage, y=srfage)) + geom_point()#
p<-p+geom_abline(slope=1)#
p#
# plot mean length-at-age over time#
# FEMALES#
p <- ggplot(subset(hal.data, sex=="F", na.rm=TRUE))#
p <- p + geom_point(aes(year, frklen, col=bbage), size=1)#
p <- p + facet_wrap(~RegArea)#
p <- ggplot(df2b) #+ geom_violin(aes(x=factor(year), y=length, col=byear))#
p <- p + geom_point(aes(x=year, y=frklen, col=sex), shape=1, size=0.5)#
#p <- p + geom_boxplot(aes(factor(year), length), point=".")#
p <- p + geom_smooth(aes(year, frklen, col=sex))#
p <- p + facet_wrap(~bbage, scales="free_y")#
# Construct SRF vs BB age for estimating BB age from SRF.#
p<-ggplot(hal.data)+geom_point(aes(bbage,srfage),size=0.5,position="jitter") +geom_abline(slope=1,col=2)#
p<-p+stat_smooth(aes(bbage, srfage), se=TRUE)#
p#
#
dt    <- cbind(X$bbage, X$srfage)#
write(dim(dt)[1], file="BBSRFage.dat")#
write("# BB SRF", file="BBSRFage.dat", append=TRUE)#
write.table(dt, file="BBSRFage.dat", append=TRUE, quote=FALSE, row.names=FALSE, col.names=FALSE)#
}
wraper()
head(hal.data)
df2b     <- subset(hal.data,RegArea=="2B",select=c(year,byear,frklen,bbage,srfage,sex))#
df2b     <- subset(df2b, bbage>=6)#
df2b     <- subset(df2b, bbage<=24)
p <- ggplot(df2b) + geom_point(aes(x=bbage,y=frklen, col=sex), size=1) #
p <- p + geom_point(aes(x=srfage, y=frklen, col=sex), size=1, pch=3)#
p <- p + facet_wrap(~year)#
p
p <- ggplot(subset(hal.data, sex=="F", na.rm=TRUE))#
p <- p + geom_point(aes(year, frklen, col=bbage), size=1)#
p <- p + facet_wrap(~RegArea)
p <- ggplot(df2b) #+ geom_violin(aes(x=factor(year), y=length, col=byear))#
p <- p + geom_point(aes(x=year, y=frklen, col=sex), shape=1, size=0.5)#
#p <- p + geom_boxplot(aes(factor(year), length), point=".")#
p <- p + geom_smooth(aes(year, frklen, col=sex))#
p <- p + facet_wrap(~bbage, scales="free_y")
p <- ggplot(subset(hal.data, sex=="F", na.rm=TRUE))#
p <- p + geom_point(aes(year, frklen, col=bbage), size=1)#
p <- p + facet_wrap(~RegArea)#
p
p <- ggplot(subset(subset(hal.data, sex=="F", na.rm=TRUE), bbage==15))#
p <- p + geom_point(aes(year, frklen, col=bbage), size=1)#
p <- p + facet_wrap(~RegArea)#
p
15/793
p<-ggplot(df2b,aes(x=bbage, y=srfage, col="year")) + geom_point()#
p<-p+geom_abline(slope=1)#
p
p<-ggplot(df2b,aes(x=bbage, y=srfage, col=year)) + geom_point()#
p<-p+geom_abline(slope=1)#
p
p<-ggplot(df2b,aes(x=bbage, y=srfage)) + geom_point()#
p<-p+geom_abline(slope=1)#
p
p<-ggplot(hal.data)+geom_point(aes(bbage,srfage),size=0.5,position="jitter") +geom_abline(slope=1,col=2)#
p<-p+stat_smooth(aes(bbage, srfage), se=TRUE)#
p
p<-ggplot(hal.data)+geom_point(aes(bbage,srfage,col=year),size=0.5,position="jitter") +geom_abline(slope=1,col=2)#
p<-p+stat_smooth(aes(bbage, srfage), se=TRUE)#
p
p <- ggplot(df2b) #+ geom_violin(aes(x=factor(year), y=length, col=byear))#
#p <- p + geom_point(aes(x=year, y=frklen, col=sex), shape=1, size=0.5)#
p <- p + geom_boxplot(aes(factor(year), length), point=".")#
p <- p + geom_smooth(aes(year, frklen, col=sex))#
p <- p + facet_wrap(~bbage, scales="free_y")
p <- ggplot(df2b) #+ geom_violin(aes(x=factor(year), y=length, col=byear))#
#p <- p + geom_point(aes(x=year, y=frklen, col=sex), shape=1, size=0.5)#
p <- p + geom_boxplot(aes(factor(year), frklen), point=".")#
p <- p + geom_smooth(aes(year, frklen, col=sex))#
p <- p + facet_wrap(~bbage, scales="free_y")
p
p <- ggplot(subset(subset(hal.data, sex=="F", na.rm=TRUE), bbage==15))#
#p <- p + geom_point(aes(year, frklen, col=bbage), size=1)#
p <- p + geom_boxplot(aes(factor(year), frklen))#
p <- p + facet_wrap(~RegArea)#
p
setwd('/Users/stevenmartell1/Documents/IPHC/SizeLimitz/src/R')
p <- ggplot(subset(subset(hal.data, sex=="F", na.rm=TRUE), bbage==10))#
#p <- p + geom_point(aes(year, frklen, col=bbage), size=1)#
p <- p + geom_boxplot(aes(factor(year), frklen))#
p <- p + facet_wrap(~RegArea)#
p
0.15*1.2
0.15*1.3
vonBH.R#
require(Riscam)#
require(ggplot2)#
A <- read.admb("vonBH")#
A$rp <- read.table("vonBH.mcmc", header=TRUE)#
#
sx          <- c("Female","Male")#
sa          <- c("2A","2B","2C","3A","3B","4A","4B","4C","4D")#
A$rp$area   <- sa[A$rp$area]#
A$rp$sex    <- sx[A$rp$sex]#
DF <- data.frame(area=sa[A$area],sex=sx[A$sex], age=A$age, fl=A$fl, fl_hat=A$fl_hat, epsilon=A$epsilon)
require(Riscam)#
require(ggplot2)#
A <- read.admb("vonBH")#
A$rp <- read.table("vonBH.mcmc", header=TRUE)#
#
sx          <- c("Female","Male")#
sa          <- c("2A","2B","2C","3A","3B","4A","4B","4C","4D")#
A$rp$area   <- sa[A$rp$area]#
A$rp$sex    <- sx[A$rp$sex]#
DF <- data.frame(area=sa[A$area],sex=sx[A$sex], age=A$age, fl=A$fl, fl_hat=A$fl_hat, epsilon=A$epsilon)
setwd('/Users/stevenmartell1/Documents/IPHC/SizeLimitz/src/VONB')
p  <- ggplot(A$rp, aes(x=F0.1, fill=area)) +geom_density(adjust=2, size=0.1, alpha=0.5)#
p  <- p  + facet_wrap(~sex, scales="free") #
p
